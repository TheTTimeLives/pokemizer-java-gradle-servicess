name: Deploy to Kubernetes

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: my-project-id
  DOCKER_REGISTRY: gcr.io
  K8S_NAMESPACE: default
  K8S_CLUSTER: my-cluster
  SERVICES: "java-announcement,java-battle,java-pokedex,java-testing,java-trainer"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker
        run: |
          echo ${{ secrets.GCP_SA_KEY }} | base64 --decode | \
          gcloud auth activate-service-account --key-file=-
          gcloud auth configure-docker

      - name: Check for changes in each service directory
        id: check-changes
        run: |
          changed_dirs=()
          for service in $(echo ${{ env.SERVICES }} | tr ',' ' '); do
            if [[ $(git diff --name-only HEAD^ HEAD -- $service) ]]; then
              changed_dirs+=($service)
            fi
          done
          echo "::set-output name=changed_dirs::${changed_dirs[@]}"

      - name: Build and push Docker image for each service with changes
        id: build-and-push
        run: |
          for service in ${{ steps.check-changes.outputs.changed_dirs }}; do
            docker build -t $DOCKER_REGISTRY/$PROJECT_ID/$service:$GITHUB_SHA .
            docker push $DOCKER_REGISTRY/$PROJECT_ID/$service:$GITHUB_SHA
          done

      - name: Update Kubernetes deployment for each service with changes
        if: steps.check-changes.outputs.changed_dirs != ''
        uses: google-github-actions/update-k8s-deployment@v0.4
          with:
            name: ${{ each service in steps.check-changes.outputs.changed_dirs }}${{ service }}
            image: $DOCKER_REGISTRY/$PROJECT_ID/${{ each service in steps.check-changes.outputs.changed_dirs }}${{ service }}:${{ github.sha }}
            namespace: $K8S_NAMESPACE
            cluster: $K8S_CLUSTER

      - name: Verify deployment
        run: |
          for service in $(echo ${{ env.SERVICES }} | tr ',' ' '); do
            kubectl rollout status deployment/$service -n $K8S_NAMESPACE
          done

name: Deploy to Kubernetes

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_REGISTRY: docker.io
      GCP_PROJECT_ID: testgke-378818
      GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
      K8S_NAMESPACE: java-test
      GKE_CLUSTER: autopilot-testgke    # Add your cluster name here.
      GKE_ZONE: us-east1   # Add your cluster zone here.
      SERVICES: "java-announcement,java-battle,java-pokedex,java-testing,java-trainer"

    strategy:
      matrix:
        service: [java-announcement, java-battle, java-pokedex, java-testing, java-trainer]

    steps:
      - name: Set Docker API timeout
        run: echo '{ "experimental": "enabled", "timeout": 300 }' | sudo tee /etc/docker/daemon.json && sudo systemctl restart docker

      - name: Checkout
        uses: actions/checkout@v2

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ env.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1.1.0
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          skip_install: true

      - name: Configure Docker
        run: |
          gcloud auth configure-docker

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Check for changes in each service directory
        id: check-changes
        run: |
          changed_dirs=$(git diff --name-only origin/main -- $(echo ${{ env.SERVICES }} | tr ',' ' '))
          if [ -z "$changed_dirs" ]; then
            echo "No changes detected. Skipping build and deployment."
            exit 0
          else
            echo "::set-output name=changed_dirs::$changed_dirs"
          fi

      - name: Build and push Docker image
        if: contains(steps.check-changes.outputs.changed_dirs, ${{ matrix.service }})
        run: |
          cd ./${{ matrix.service }}
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$GCP_PROJECT_ID-${{ matrix.service }}:$GITHUB_SHA .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/$GCP_PROJECT_ID-${{ matrix.service }}:$GITHUB_SHA ${{ secrets.DOCKERHUB_USERNAME }}/$GCP_PROJECT_ID-${{ matrix.service }}:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$GCP_PROJECT_ID-${{ matrix.service }}:$GITHUB_SHA
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$GCP_PROJECT_ID-${{ matrix.service }}:latest

      - name: Authenticate with GKE
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER}}
          location: ${{ env.GKE_ZONE}}
          credentials: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy to Kubernetes
        if: contains(steps.check-changes.outputs.changed_dirs, $